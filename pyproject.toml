[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "unified-search-mcp"
version = "1.0.0"
description = "통합 검색 MCP 서버 - Google Scholar, Web, YouTube 검색"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "JDeun", email = "your.email@example.com"}
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
keywords = ["mcp", "search", "google-scholar", "youtube", "google-search", "api", "fastmcp"]

dependencies = [
    "fastmcp>=0.1.8",
    "scholarly>=1.7.11",
    "httpx>=0.25.2",
    "aiohttp>=3.9.1",
    "cachetools>=5.3.2",
    "redis>=5.0.1",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "cryptography>=41.0.7",
    "prometheus-client>=0.19.0",
    "python-json-logger>=2.0.7",
    "aiofiles>=23.2.1"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
    "black>=23.12.0",
    "ruff>=0.1.8",
    "mypy>=1.7.1",
    "pre-commit>=3.5.0"
]

[project.scripts]
unified-search-mcp = "unified_search_server:main"

[project.urls]
"Homepage" = "https://github.com/JDeun/unified-search-mcp-server"
"Bug Reports" = "https://github.com/JDeun/unified-search-mcp-server/issues"
"Source" = "https://github.com/JDeun/unified-search-mcp-server"
"Documentation" = "https://github.com/JDeun/unified-search-mcp-server#readme"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]

[tool.black]
line-length = 100
target-version = ['py310']
include = '\.pyi?$'

[tool.ruff]
line-length = 100
target-version = "py310"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]
